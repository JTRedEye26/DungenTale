/*
 * January 22, 2018
 * This is the shop screen for the game. It allows players to buy upgrades and health potions
 */
package DungenTaleJFRames;

import java.io.FileReader;// allows the useage of some commands
import java.io.IOException;
import java.io.BufferedReader;
import DungenTaleClasses.CharacterClass;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus
 */
public class ShopScreen extends javax.swing.JFrame {

    MainGameDisplayScreen mainGameDisplayScreen;
    ShopScreen shopScreen;
    CharacterClass player;

    /**
     * Creates new form ShopScreen
     */
    public ShopScreen(MainGameDisplayScreen m) {
        initComponents();
        mainGameDisplayScreen = m;
        player = mainGameDisplayScreen.getPlayer();

        if (player.getArcher()) {//Checks which character was chosen at the beginning of the game
            Background.setIcon(new ImageIcon(getClass().getResource("/Backgrounds/ShopArcher.png")));
            weapon1.setText("Buy Sling Price FREE");//Displays items available to the archer
            weapon2.setText("Buy Short Bow Price 30");
            weapon3.setText("Buy Self Bow Price 40");
            weapon4.setText("Buy Longbow Price 50");
            weapon5.setText("Buy Recurve Bow Price 60");
            armour1.setText("Buy Animal Hide Armour Price FREE");
            armour2.setText("Buy Fur Armour Price 30");
            armour3.setText("Buy Leather Armour Price 40");
            armour4.setText("Buy Reinforced Leather Armour Price 50");
            armour5.setText("Buy Studded Leather Armour\nPrice Price 60");
        } else if (player.getKnight()) {
            Background.setIcon(new ImageIcon(getClass().getResource("/Backgrounds/ShopKnight.png")));
            weapon1.setText("Buy Stick Price FREE");//Displays items available to the knight
            weapon2.setText("Buy Short Sword Price 30");
            weapon3.setText("Buy LongSword Price 40");
            weapon4.setText("Buy Claymore Price 50");
            weapon5.setText("Buy Great Sword Price 60");
            armour1.setText("Buy Cloth Armour Price FREE");
            armour2.setText("Buy Leather Armour Price 30");
            armour3.setText("Buy Iron Armour Price 40");
            armour4.setText("Buy Steel Armour Price 50");
            armour5.setText("Buy Steel Plate Armour Price 60");
        } else if (player.getMage()) {
            Background.setIcon(new ImageIcon(getClass().getResource("/Backgrounds/ShopMage.png")));
            weapon1.setText("Buy Stick Price FREE");//Displays items available to the mage
            weapon2.setText("Buy Wooden Wand Price 30");
            weapon3.setText("Buy Iron Wand Price 40");
            weapon4.setText("Buy Wooden Staff Price 50");
            weapon5.setText("Buy Iron Staff Price 60");
            armour1.setText("Buy Red Cloak Price FREE");
            armour2.setText("Buy Green Cloak Price 30");
            armour3.setText("Buy Purple Cloak Price 40");
            armour4.setText("Buy Blue Cloak Price 50");
            armour5.setText("Buy Brown Cloak Price 60");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        weapon1 = new javax.swing.JButton();
        weapon2 = new javax.swing.JButton();
        weapon3 = new javax.swing.JButton();
        weapon4 = new javax.swing.JButton();
        weapon5 = new javax.swing.JButton();
        armour1 = new javax.swing.JButton();
        armour2 = new javax.swing.JButton();
        armour3 = new javax.swing.JButton();
        armour4 = new javax.swing.JButton();
        armour5 = new javax.swing.JButton();
        back = new javax.swing.JButton();
        healthPotion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Upgrades = new javax.swing.JTextArea();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        weapon1.setText("Buy Stick");
        weapon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weapon1ActionPerformed(evt);
            }
        });
        jPanel3.add(weapon1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 210, 90));

        weapon2.setText("Buy ShortSward");
        weapon2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weapon2ActionPerformed(evt);
            }
        });
        jPanel3.add(weapon2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, 210, 90));

        weapon3.setText("Buy LongSward");
        weapon3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weapon3ActionPerformed(evt);
            }
        });
        jPanel3.add(weapon3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 210, 90));

        weapon4.setText("Buy Claymore");
        weapon4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weapon4ActionPerformed(evt);
            }
        });
        jPanel3.add(weapon4, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 140, 210, 90));

        weapon5.setText("Buy GreatSward");
        weapon5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weapon5ActionPerformed(evt);
            }
        });
        jPanel3.add(weapon5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 260, 210, 90));

        armour1.setText("Buy Cloth Armour");
        armour1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                armour1ActionPerformed(evt);
            }
        });
        jPanel3.add(armour1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 260, 210, 90));

        armour2.setText("Buy Leather Armour");
        armour2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                armour2ActionPerformed(evt);
            }
        });
        jPanel3.add(armour2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 390, 210, 90));

        armour3.setText("Buy Iron Armour");
        armour3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                armour3ActionPerformed(evt);
            }
        });
        jPanel3.add(armour3, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 390, 210, 90));

        armour4.setText("Buy Steel Armour");
        armour4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                armour4ActionPerformed(evt);
            }
        });
        jPanel3.add(armour4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 510, 210, 80));

        armour5.setText("Buy Steel Plate Armour");
        armour5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                armour5ActionPerformed(evt);
            }
        });
        jPanel3.add(armour5, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 520, 210, 80));

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel3.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 643, 100, 70));

        healthPotion.setText("Buy Health potion 15");
        healthPotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                healthPotionActionPerformed(evt);
            }
        });
        jPanel3.add(healthPotion, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 630, 210, 80));

        Upgrades.setColumns(20);
        Upgrades.setRows(5);
        jScrollPane1.setViewportView(Upgrades);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 620, 330, -1));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Backgrounds/ShopKnight.png"))); // NOI18N
        jPanel3.add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String placeHolder;// these are the variables used 
    int skip, defence, damage, price;
    boolean character, armour;

    public void setShop() {
        try {
            FileReader fr = new FileReader("src//DataTextFiles//ShopInfo.txt");
            try (BufferedReader br = new BufferedReader(fr)) {
                for (int i = 1; i <= skip; i++) {

                    placeHolder = br.readLine();
                }

                if (!armour) {
                    damage = Integer.parseInt(placeHolder);//Changes attack to match the attack of the weapon bought
                    player.setAttack(damage + player.getAttack());
                    Upgrades.append("Your damage is now " + player.getAttack() + "!\n");
                } else {
                    defence = Integer.parseInt(placeHolder);//Changes defense to match the defense of armour bought
                    player.setArmour(defence + player.getArmour());
                    Upgrades.append("Your defence is now " + player.getArmour() + "!\n");

                }
                br.close();
            }
        } catch (IOException e) {

            System.out.print("Error: " + e);
        }
    }


    private void armour4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_armour4ActionPerformed

        if (player.getCoins() >= 50) {// these if structures make sure you have enough money and that you get the right upgrade
            if (player.getKnight()) {
                skip = 9;
            } else if (player.getArcher()) {
                skip = 19;
            } else {
                skip = 29;
            }
            player.setCoins(player.getCoins() - 50);
            armour = true;
            setShop();
            armour4.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "You don't have enough coins.");// this tells the player they dont have enough to buy the item
        }

    }//GEN-LAST:event_armour4ActionPerformed

    private void weapon5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weapon5ActionPerformed
        if (player.getCoins() >= 60) {
            if (player.getKnight()) {
                skip = 5;
                System.out.println(damage);
                System.out.print(placeHolder);
            } else if (player.getArcher()) {
                skip = 15;
            } else {
                skip = 25;
            }
            player.setCoins(player.getCoins() - 60);
            armour = false;
            setShop();
            weapon5.setEnabled(false);

        } else {
            JOptionPane.showMessageDialog(null, "You don't have enough coins.");
        }
    }//GEN-LAST:event_weapon5ActionPerformed

    private void armour3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_armour3ActionPerformed
        if (player.getCoins() >= 40) {
            if (player.getKnight()) {
                skip = 8;
            } else if (player.getArcher()) {
                skip = 18;
            } else {
                skip = 28;
            }
            player.setCoins(player.getCoins() - 40);
            armour = true;
            setShop();
            armour3.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "You don't have enough coins.");
        }
    }//GEN-LAST:event_armour3ActionPerformed

    private void armour1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_armour1ActionPerformed
        if (player.getCoins() >= 0) {
            if (player.getKnight()) {
                skip = 6;
            } else if (player.getArcher()) {
                skip = 16;
            } else {
                skip = 26;
            }
            armour = true;
            setShop();
            armour1.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "you don't have enough coins");
        }

    }//GEN-LAST:event_armour1ActionPerformed

    private void weapon2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weapon2ActionPerformed
        if (player.getCoins() >= 30) {
            if (player.getKnight()) {
                skip = 2;
            } else if (player.getArcher()) {
                skip = 12;
            } else {
                skip = 22;
            }
            player.setCoins(player.getCoins() - 30);
            armour = false;
            setShop();
            weapon2.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "you don't have enough coins");
        }
    }//GEN-LAST:event_weapon2ActionPerformed

    private void armour5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_armour5ActionPerformed
        if (player.getCoins() >= 60) {
            if (player.getKnight()) {
                skip = 10;
            } else if (player.getArcher()) {
                skip = 20;
            } else {
                skip = 30;
            }
            player.setCoins(player.getCoins() - 60);
            armour = true;
            setShop();
            armour5.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "You don't have enough coins.");
        }
    }//GEN-LAST:event_armour5ActionPerformed

    private void weapon3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weapon3ActionPerformed
        if (player.getCoins() >= 40) {
            if (player.getKnight()) {
                skip = 3;
            } else if (player.getArcher()) {
                skip = 13;
            } else {
                skip = 23;
            }
            player.setCoins(player.getCoins() - 40);
            armour = false;
            setShop();
            weapon3.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "You don't have enough coins.");
        }
    }//GEN-LAST:event_weapon3ActionPerformed

    private void weapon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weapon1ActionPerformed
        if (player.getCoins() >= 0) {
            if (player.getKnight()) {
                skip = 1;
            } else if (player.getArcher()) {
                skip = 11;
            } else {
                skip = 21;
            }
            armour = false;
            setShop();
            weapon1.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "You don't have enough coins.");
        }
    }//GEN-LAST:event_weapon1ActionPerformed

    private void weapon4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weapon4ActionPerformed
        if (player.getCoins() >= 50) {
            if (player.getKnight()) {
                skip = 4;
            } else if (player.getArcher()) {
                skip = 14;
            } else {
                skip = 24;
            }
            player.setCoins(player.getCoins() - 50);
            armour = false;
            setShop();
            weapon4.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "You don't have enough coins.");
        }
    }//GEN-LAST:event_weapon4ActionPerformed

    private void armour2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_armour2ActionPerformed
        if (player.getCoins() >= 30) {
            if (player.getKnight()) {
                skip = 7;
            } else if (player.getArcher()) {
                skip = 17;
            } else {
                skip = 27;
            }
            player.setCoins(player.getCoins() - 30);
            armour = true;
            setShop();
            armour2.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "You don't have enough coins.");
        }
    }//GEN-LAST:event_armour2ActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        mainGameDisplayScreen.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void healthPotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_healthPotionActionPerformed
        if (player.getCoins() >= 15) {
            player.setHealthPots(player.getHealthPots() + 1);
            Upgrades.append("You now have " + player.getHealthPots() + " health potions.\n");
        } else {
            JOptionPane.showMessageDialog(null, "You don't have enough coins.");
        }
    }//GEN-LAST:event_healthPotionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JTextArea Upgrades;
    private javax.swing.JButton armour1;
    private javax.swing.JButton armour2;
    private javax.swing.JButton armour3;
    private javax.swing.JButton armour4;
    private javax.swing.JButton armour5;
    private javax.swing.JButton back;
    private javax.swing.JButton healthPotion;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton weapon1;
    private javax.swing.JButton weapon2;
    private javax.swing.JButton weapon3;
    private javax.swing.JButton weapon4;
    private javax.swing.JButton weapon5;
    // End of variables declaration//GEN-END:variables
}
